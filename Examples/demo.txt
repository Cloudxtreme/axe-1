cd ~/work/Axe/Demo

# View trace.txt
#   * example of non-SC trace
less trace.txt

  0: v1 := 1
  0: v0 == 0
  1: v0 := 1
  1: v1 == 0

# Check SC
Axe -c sc -f trace.txt

# Check TSO
Axe -c tso -f trace.txt

# Add syncs
vim trace.txt

  0: v1 := 1
  0: sync
  0: v0 == 0
  1: v0 := 1
  1: sync
  1: v1 == 0

# Recheck TSO
Axe -c tso -f trace.txt

# View constraints
Axe -v -c tso -f trace.txt

# View constraint generator
cd ..
cd Axiomatic
ls
vim SC.lhs

  * PO constraints: on each thread assert that each instruction
    preceeds following instruction

  * RFWO constraints: for each load instruction "me", introduce constraints

      * if "me" reads initial value 0, "me" must preceed all stores to
        same location
 
      * otherwise, "me" must read from a store "s" 

      * "s" must preceed "me"

      * for all other stores "s'" to same location

          * EITHER: "s'" must preceed "s" (the store that I read from)
          * OR: "me" must preceed "s'"

# Test constraint-based models against reference models
#  * reference models come from SPARC manual & published papers
#  * reference models do brute-force enumeration of non-determinism
Axe -t sc
Axe -t rmo
Axe -t sc-sa

# Compare efficiency of reference and constraint-based models
less Demo/15instrs_4cores.txt
time Axe -c sc -f Demo/15instrs_4cores.txt -r
time Axe -c sc -f Demo/15instrs_4cores.txt

# See potential of constraint-based models
time Axe -c sc -f Demo/256instrs_16cores.txt

# Substantial constraints being generated
time Axe -c sc -f Demo/256instrs_16cores.txt -v

# Search for trace that is not TSO but is TSO-SA
./Find_TSOMinusSA_And_NotTSO -n 100000

# Show application to CHERI
cd /local/scratch/mn416/RemsDemo/cheri/trunk
./sim +sc
./sim +sc +replay +showtrace
./sim +tso
